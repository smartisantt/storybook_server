# Generated by Django 2.1.8 on 2019-06-20 02:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=255, null=True, verbose_name='活动名称')),
                ('intro', models.CharField(max_length=1024, null=True, verbose_name='活动介绍')),
                ('status', models.CharField(max_length=32, null=True, verbose_name='活动状态')),
                ('mediaUuid', models.CharField(max_length=256, null=True, verbose_name='活动图片')),
                ('startTime', models.DateTimeField(null=True, verbose_name='活动开始时间')),
                ('endTime', models.DateTimeField(null=True, verbose_name='活动结束时间')),
            ],
            options={
                'db_table': 'tb_activity',
            },
        ),
        migrations.CreateModel(
            name='Ad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('mediaUuid', models.CharField(max_length=64, null=True, verbose_name='广告图片')),
                ('jumpUrl', models.CharField(max_length=128, null=True, verbose_name='跳转地址')),
                ('startTime', models.DateTimeField(null=True, verbose_name='时效开始时间')),
                ('endTime', models.DateTimeField(null=True, verbose_name='时效结束时间')),
                ('isDelete', models.BooleanField(null=True, verbose_name='软删除')),
            ],
            options={
                'db_table': 'tb_ad',
            },
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('title', models.CharField(max_length=64, null=True)),
                ('intro', models.CharField(max_length=256, null=True)),
                ('mediaUuid', models.CharField(max_length=64, null=True)),
                ('status', models.CharField(max_length=32, null=True)),
            ],
            options={
                'db_table': 'tb_album',
            },
        ),
        migrations.CreateModel(
            name='Baby',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=24, null=True, verbose_name='宝宝姓名')),
                ('babyBirthday', models.DateTimeField(null=True, verbose_name='宝宝生日')),
                ('gender', models.IntegerField(default=False)),
            ],
            options={
                'db_table': 'tb_baby',
            },
        ),
        migrations.CreateModel(
            name='Bgm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=32, null=True)),
                ('mediaUuid', models.CharField(max_length=64, null=True)),
                ('bgmTime', models.IntegerField(null=True, verbose_name='背景音乐时长')),
                ('isUsing', models.IntegerField(null=True, verbose_name='是否在用')),
                ('sortNum', models.IntegerField(null=True, verbose_name='排序编号')),
            ],
            options={
                'db_table': 'tb_bgm',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('questiontype', models.CharField(max_length=26, null=True)),
                ('content', models.CharField(max_length=1024, null=True)),
                ('mediauuid1', models.CharField(max_length=64, null=True)),
                ('mediauuid2', models.CharField(max_length=64, null=True)),
                ('mediauuid3', models.CharField(max_length=64, null=True)),
                ('mediauuid4', models.CharField(max_length=64, null=True)),
                ('tel', models.CharField(max_length=20, null=True)),
            ],
            options={
                'db_table': 'tb_feedback',
            },
        ),
        migrations.CreateModel(
            name='HotSearch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('keyword', models.CharField(max_length=32, null=True)),
                ('orderNum', models.IntegerField(null=True)),
                ('isDelete', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'tb_search',
            },
        ),
        migrations.CreateModel(
            name='LoginLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('ipAddr', models.CharField(max_length=126, null=True, verbose_name='IP地址')),
                ('devCode', models.CharField(max_length=256, null=True, verbose_name='设备编号')),
            ],
            options={
                'db_table': 'tb_login_log',
            },
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('name', models.CharField(max_length=32, null=True)),
                ('ordernNum', models.IntegerField(null=True, verbose_name='排序编号')),
                ('type', models.CharField(max_length=32, null=True)),
            ],
            options={
                'db_table': 'tb_module',
            },
        ),
        migrations.CreateModel(
            name='Rank',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('userRank', models.IntegerField(null=True)),
                ('popularity', models.IntegerField(null=True, verbose_name='人气')),
                ('activityUuid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activityRankUuid', to='manager.Activity', to_field='uuid')),
            ],
            options={
                'db_table': 'tb_rank',
            },
        ),
        migrations.CreateModel(
            name='Records',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('recordType', models.CharField(max_length=20, null=True)),
            ],
            options={
                'db_table': 'tb_records',
            },
        ),
        migrations.CreateModel(
            name='Relation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('relationType', models.CharField(max_length=32, null=True)),
                ('status', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'tb_relation',
            },
        ),
        migrations.CreateModel(
            name='SearchHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('searchName', models.CharField(max_length=20, null=True)),
                ('searchTime', models.DateTimeField(null=True)),
            ],
            options={
                'db_table': 'tb_searchhistory',
            },
        ),
        migrations.CreateModel(
            name='Sign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('activitUuid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='activitSignUuid', to='manager.Activity', to_field='uuid')),
            ],
            options={
                'db_table': 'tb_sign',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('code', models.CharField(max_length=20, null=True)),
                ('tag_name', models.CharField(max_length=32, null=True)),
                ('parent_id', models.IntegerField(null=True)),
            ],
            options={
                'db_table': 'tb_tag',
            },
        ),
        migrations.CreateModel(
            name='TemplateStory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('faceMediaUuid', models.CharField(max_length=64, null=True)),
                ('listMediaUuid', models.CharField(max_length=64, null=True)),
                ('intro', models.CharField(max_length=512, null=True)),
                ('content', models.TextField(null=True)),
                ('recordNum', models.IntegerField(null=True)),
                ('tags', models.ManyToManyField(to='manager.Tag')),
            ],
            options={
                'db_table': 'tb_templatestory',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('userID', models.CharField(default=None, max_length=64)),
                ('username', models.CharField(max_length=30)),
                ('startTime', models.DateTimeField(null=True)),
                ('endTime', models.DateTimeField(null=True)),
                ('tel', models.CharField(max_length=20)),
                ('userLogo', models.CharField(max_length=255, null=True)),
                ('gender', models.IntegerField(null=True)),
                ('status', models.CharField(max_length=64, null=True)),
                ('roles', models.CharField(max_length=1024, null=True)),
            ],
            options={
                'db_table': 'tb_user',
            },
        ),
        migrations.CreateModel(
            name='Version',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('version', models.CharField(max_length=26, null=True)),
                ('name', models.CharField(max_length=26, null=True)),
                ('company', models.CharField(max_length=26, null=True)),
                ('status', models.CharField(max_length=32, null=True)),
            ],
            options={
                'db_table': 'tb_version',
            },
        ),
        migrations.CreateModel(
            name='Viewpager',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('title', models.CharField(max_length=64, null=True)),
                ('orderNum', models.IntegerField(null=True)),
                ('mediaUuid', models.CharField(max_length=64, null=True)),
                ('startTime', models.DateTimeField(null=True)),
                ('endTime', models.DateTimeField(null=True)),
                ('jumpType', models.CharField(max_length=64, null=True)),
                ('targetUuid', models.CharField(max_length=128, null=True)),
                ('isUsing', models.BooleanField(default=True)),
            ],
            options={
                'db_table': 'tb_viewpager',
            },
        ),
        migrations.CreateModel(
            name='Works',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.CharField(max_length=64, unique=True)),
                ('createTime', models.DateTimeField(auto_now_add=True, null=True, verbose_name='创建时间')),
                ('updateTime', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
                ('isUpload', models.IntegerField(default=False)),
                ('voiceMediaUuid', models.CharField(max_length=64, null=True)),
                ('uservolume', models.IntegerField(null=True)),
                ('bgmvolume', models.IntegerField(null=True)),
                ('recordType', models.IntegerField(null=True)),
                ('recordDate', models.DateTimeField(null=True)),
                ('playTimes', models.IntegerField(null=True)),
                ('worksType', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=128, null=True)),
                ('photoMediaUuid', models.CharField(max_length=64, null=True)),
                ('feeling', models.CharField(max_length=512, null=True)),
                ('worksTime', models.IntegerField(null=True)),
                ('checkStatus', models.CharField(max_length=64, null=True)),
                ('checkInfo', models.CharField(max_length=256, null=True)),
                ('albumUuid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='albumWorkUuid', to='manager.Album', to_field='uuid')),
                ('bgmUuid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bgmWorksUuid', to='manager.Bgm', to_field='uuid')),
                ('moduleUuid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='moduleWorksUuid', to='manager.Module', to_field='uuid')),
                ('tags', models.ManyToManyField(to='manager.Tag')),
                ('templateUuid', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='templateStoryUuid', to='manager.TemplateStory', to_field='uuid')),
            ],
            options={
                'db_table': 'tb_works',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='versionUuid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='versionUserUuid', to='manager.Version', to_field='uuid'),
        ),
        migrations.AddField(
            model_name='user',
            name='works',
            field=models.ManyToManyField(through='manager.Records', to='manager.Works'),
        ),
        migrations.AddField(
            model_name='sign',
            name='userUuid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userSignUuid', to='manager.User', to_field='uuid'),
        ),
        migrations.AddField(
            model_name='searchhistory',
            name='userUuid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userSearchUuid', to='manager.User', to_field='uuid'),
        ),
        migrations.AddField(
            model_name='relation',
            name='relationUserUuid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='relationUserRelationUuid', to='manager.User', to_field='uuid'),
        ),
        migrations.AddField(
            model_name='relation',
            name='userUuid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userRelationUuid', to='manager.User', to_field='uuid'),
        ),
        migrations.AddField(
            model_name='records',
            name='userUuid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userRecordUuid', to='manager.User', to_field='uuid'),
        ),
        migrations.AddField(
            model_name='records',
            name='workUuid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workRecordUuid', to='manager.Works', to_field='uuid'),
        ),
        migrations.AddField(
            model_name='rank',
            name='userUuid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userRankUuid', to='manager.User', to_field='uuid'),
        ),
        migrations.AddField(
            model_name='rank',
            name='workUuid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='workRankUuid', to='manager.Works', to_field='uuid'),
        ),
        migrations.AddField(
            model_name='loginlog',
            name='userUuid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='longinLogUuid', to='manager.User', to_field='uuid'),
        ),
        migrations.AddField(
            model_name='feedback',
            name='userUuid',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='userFeedbackUuid', to='manager.User', to_field='uuid'),
        ),
        migrations.AddField(
            model_name='album',
            name='tags',
            field=models.ManyToManyField(to='manager.Tag'),
        ),
    ]
